---
- name: Install Nginx (Ubuntu)
  apt:
    name: nginx
    state: present
  when: ansible_os_family == "Debian"

- name: Install Nginx (Rocky Linux)
  dnf:
    name: nginx
    state: present
  when: ansible_os_family == "RedHat"

- name: Remove default site (Ubuntu)
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  when: ansible_os_family == "Debian"
  notify: restart nginx

- name: Configure Jenkins proxy (Ubuntu)
  template:
    src: jenkins.conf.j2
    dest: /etc/nginx/sites-available/jenkins.conf
  when: ansible_os_family == "Debian"
  notify: restart nginx

- name: Configure Nexus proxy (Ubuntu)
  template:
    src: nexus.conf.j2
    dest: /etc/nginx/sites-available/nexus.conf
  when: ansible_os_family == "Debian"
  notify: restart nginx

- name: Configure SonarQube proxy (Ubuntu)
  template:
    src: sonar.conf.j2
    dest: /etc/nginx/sites-available/sonar.conf
  when: ansible_os_family == "Debian"
  notify: restart nginx

- name: Configure Jenkins proxy (Rocky Linux)
  template:
    src: jenkins.conf.j2
    dest: /etc/nginx/conf.d/jenkins.conf
  when: ansible_os_family == "RedHat"
  notify: restart nginx

- name: Configure Nexus proxy (Rocky Linux)
  template:
    src: nexus.conf.j2
    dest: /etc/nginx/conf.d/nexus.conf
  when: ansible_os_family == "RedHat"
  notify: restart nginx

- name: Configure SonarQube proxy (Rocky Linux)
  template:
    src: sonar.conf.j2
    dest: /etc/nginx/conf.d/sonar.conf
  when: ansible_os_family == "RedHat"
  notify: restart nginx

- name: Enable sites (Ubuntu)
  file:
    src: "/etc/nginx/sites-available/{{ item }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item }}.conf"
    state: link
  loop:
    - jenkins
    - nexus
    - sonar
  when: ansible_os_family == "Debian"
  notify: restart nginx

- name: Start Nginx service
  systemd:
    name: nginx
    state: started
    enabled: yes