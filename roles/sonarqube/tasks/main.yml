---
- name: Install Java 17 (Ubuntu)
  apt:
    name: openjdk-17-jdk
    state: present
  when: ansible_os_family == "Debian"
  tags: sonarqube

- name: Install Java 21 (Rocky Linux)
  dnf:
    name: java-21-openjdk
    state: present
  when: ansible_os_family == "RedHat"
  tags: sonarqube

- name: Install PostgreSQL (Ubuntu)
  apt:
    name:
      - postgresql
      - postgresql-contrib
      - python3-psycopg2
    state: present
  when: ansible_os_family == "Debian"
  tags: sonarqube

- name: Install PostgreSQL (Rocky Linux)
  dnf:
    name:
      - postgresql-server
      - postgresql-contrib
      - python3-psycopg2
    state: present
  when: ansible_os_family == "RedHat"
  tags: sonarqube

- name: Initialize PostgreSQL (Rocky Linux)
  shell: postgresql-setup --initdb
  when: ansible_os_family == "RedHat"
  ignore_errors: yes
  tags: sonarqube

- name: Start PostgreSQL
  systemd:
    name: postgresql
    state: started
    enabled: yes
  tags: sonarqube

- name: Set SonarQube password as fact
  set_fact:
    sonar_password: "{{ sonar_db_password }}"
  tags: sonarqube

- name: Create SonarQube database
  postgresql_db:
    name: sonarqube
    state: present
  become_user: postgres
  tags: sonarqube

- name: Create SonarQube user
  postgresql_user:
    name: sonarqube
    password: "{{ sonar_password }}"
    db: sonarqube
    priv: ALL
    state: present
  become_user: postgres
  tags: sonarqube

- name: Find PostgreSQL version (Ubuntu)
  shell: ls /etc/postgresql/ | head -1
  register: pg_version
  when: ansible_os_family == "Debian"
  tags: sonarqube

- name: Configure PostgreSQL for low memory (Ubuntu)
  lineinfile:
    path: "/etc/postgresql/{{ pg_version.stdout }}/main/postgresql.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^#?shared_buffers', line: 'shared_buffers = 128MB' }
    - { regexp: '^#?effective_cache_size', line: 'effective_cache_size = 512MB' }
  when: ansible_os_family == "Debian"
  notify: restart postgresql
  tags: sonarqube

- name: Configure PostgreSQL for low memory (Rocky Linux)
  lineinfile:
    path: "/var/lib/pgsql/data/postgresql.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^#?shared_buffers', line: 'shared_buffers = 128MB' }
    - { regexp: '^#?effective_cache_size', line: 'effective_cache_size = 512MB' }
  when: ansible_os_family == "RedHat"
  notify: restart postgresql
  tags: sonarqube

- name: Create sonarqube system user
  user:
    name: sonarqube
    system: yes
    shell: /bin/bash
    home: /opt/sonarqube
  tags: sonarqube

- name: Download SonarQube
  get_url:
    url: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-10.6.0.92116.zip
    dest: /tmp/sonarqube.zip
    timeout: 60
    retries: 3
    delay: 10
  tags: sonarqube

- name: Extract SonarQube
  unarchive:
    src: /tmp/sonarqube.zip
    dest: /opt
    remote_src: yes
    owner: sonarqube
    group: sonarqube
  tags: sonarqube

- name: Create symlink
  file:
    src: /opt/sonarqube-10.6.0.92116
    dest: /opt/sonarqube
    state: link
    owner: sonarqube
    group: sonarqube
  tags: sonarqube

- name: Configure SonarQube
  template:
    src: sonar.properties.j2
    dest: /opt/sonarqube/conf/sonar.properties
    owner: sonarqube
    group: sonarqube
  notify: restart sonarqube
  tags: sonarqube

- name: Configure SonarQube service
  template:
    src: sonarqube.service.j2
    dest: /etc/systemd/system/sonarqube.service
  notify: restart sonarqube
  tags: sonarqube

- name: Configure firewall for SonarQube (Ubuntu)
  ufw:
    rule: allow
    port: "9000"
  when: ansible_os_family == "Debian"
  tags: sonarqube

- name: Configure firewall for SonarQube (Rocky Linux)
  firewalld:
    port: 9000/tcp
    permanent: yes
    state: enabled
    immediate: yes
  when: ansible_os_family == "RedHat"
  tags: sonarqube

- name: Start SonarQube service
  systemd:
    name: sonarqube
    state: started
    enabled: yes
    daemon_reload: yes
  tags: sonarqube